openapi: 3.0.3
info:
  title: Proposal Backend API
  version: 0.1.0
servers:
  - url: http://127.0.0.1:8000
paths:
  /api/clients:
    get:
      summary: Tampilkan semua client
      responses:
        '200':
          description: Operasi berhasil. Mengembalikan daftar client.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
    post:
      summary: Buat client baru
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                company:
                  type: string
                location:
                  type: string
                badanUsaha:
                  type: string
                picName:
                  type: string
                position:
                  type: string
      responses:
        '201':
          description: Client berhasil dibuat.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
  /api/projects:
    get:
      summary: Tampilkan semua project
      responses:
        '200':
          description: Operasi berhasil. Mengembalikan daftar project.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    post:
      summary: Buat project baru
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFormData'
      responses:
        '201':
          description: Project berhasil dibuat.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /api/projects/{id}:
    get:
      summary: Tampilkan detail project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Operasi berhasil.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    put:
      summary: Update project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFormData'
      responses:
        '200':
          description: Project berhasil diupdate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    delete:
      summary: Hapus project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Project berhasil dihapus.
  /api/proposals:
    get:
      summary: Tampilkan semua proposal
      responses:
        '200':
          description: Operasi berhasil. Mengembalikan daftar proposal.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proposal'
    post:
      summary: Buat proposal baru
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProposalFormData'
      responses:
        '201':
          description: Proposal berhasil dibuat.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
  /api/proposals/{id}:
    get:
      summary: Tampilkan detail proposal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Operasi berhasil.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
    put:
      summary: Update proposal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProposalFormData'
      responses:
        '200':
          description: Proposal berhasil diupdate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
    delete:
      summary: Hapus proposal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Proposal berhasil dihapus.
  /api/proposal/templates:
    get:
      summary: Get active proposal templates (complex + simple)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
  /api/proposals/{proposal}/content:
    get:
      summary: Get proposal content snapshot
      parameters:
        - name: proposal
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProposalContent'
    put:
      summary: Upsert proposal content snapshot
      parameters:
        - name: proposal
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/ProposalContent'
      responses:
        '200':
          description: Saved
  /api/projects/{id}/proposals:
    get:
      summary: List proposals by project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
    post:
      summary: Create proposal for project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                version:
                  type: string
      responses:
        '201':
          description: Created
components:
  schemas:
    Client:
      type: object
      properties:
        id:
          type: integer
          description: ID unik untuk client.
          example: 1
        company:
          type: string
          description: Nama perusahaan client.
          example: PT. Jaya Abadi
        location:
          type: string
          description: Lokasi atau kota client.
          example: Jakarta
        badanUsaha:
          type: string
          description: Bentuk badan usaha (PT, CV, dll).
          example: PT
        picName:
          type: string
          description: Nama Person in Charge (PIC).
          example: Budi Santoso
        position:
          type: string
          description: Jabatan PIC.
          example: Manager IT
        created_at:
          type: string
          format: date-time
          description: Waktu pembuatan record.
        updated_at:
          type: string
          format: date-time
          description: Waktu update record terakhir.
    Project:
      type: object
      properties:
        id:
          type: integer
        client_id:
          type: integer
        name:
          type: string
        analyst:
          type: string
        grade:
          type: string
        roles:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ProjectFormData:
      type: object
      required:
        - client_id
        - name
        - analyst
        - grade
      properties:
        client_id:
          type: integer
        name:
          type: string
        analyst:
          type: string
        grade:
          type: string
        roles:
          type: array
          items:
            type: string
    Proposal:
      type: object
      properties:
        id:
          type: integer
        project_id:
          type: integer
        version:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ProposalFormData:
      type: object
      required:
        - project_id
        - version
      properties:
        project_id:
          type: integer
        version:
          type: string
    TemplateResponse:
      type: object
      properties:
        complex:
          type: object
          additionalProperties:
            type: object
            properties:
              title:
                type: string
              columns:
                type: array
                items:
                  type: object
                  properties:
                    key: { type: string }
                    label: { type: string }
                    input_type: { type: string }
                    is_checkable: { type: boolean }
              rows:
                type: array
                items:
                  type: object
                  properties:
                    values:
                      type: object
              footnotes:
                type: array
                items: { type: string }
        simple:
          type: object
          properties:
            frontend_lang: { $ref: '#/components/schemas/SimpleList' }
            app_info: { $ref: '#/components/schemas/SimpleList' }
            account_availability: { $ref: '#/components/schemas/SimpleList' }
            db_availability: { $ref: '#/components/schemas/SimpleList' }
            db_info: { $ref: '#/components/schemas/SimpleList' }
    SimpleList:
      type: array
      items:
        type: object
        properties:
          label: { type: string }
          is_other: { type: boolean }
    ProposalContent:
      type: object
      properties:
        systemEnvironment:
          type: object
          properties:
            mobile:
              type: object
            web:
              type: object
            simple:
              type: object
        featureSales:
          type: array
          items: { type: object }
        featureAdmin:
          type: array
          items: { type: object }
        financialBreakdown:
          type: array
          items: { type: object }
        termsOfPayment:
          type: array
          items: { type: object }
        termsAndConditions:
          type: array
          items: { type: string }